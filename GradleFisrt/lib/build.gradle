/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'com.google.guava:guava:23.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task customTask{
  group "custom"
  description "this task prints the task running"
  doLast{
      println " This is my custom task running"
  }

}


task copyFile(type: Copy){
from 'D:\\copytaskcopied\\CopytaskFile.txt'
into 'D:\\'

}

task doFirstanddoLast{

   doFirst{
    println " hello, this is from doFirst"
   
   }

   doLast{
   println "this is from doLast"
   
   }

}

task groupTask1{
  group "Group Task"
  doLast{
  println "This is from group task1"
  }
}

task groupTask2{
  group "Group Task"
  doLast{
  println "This is from group task2"
  }
}
task skipping{
    group "skipping example"
    doLast{
      println "this is skipping task"
    }
  }
skipping.onlyIf{
  project.hasProperty('skip')
}

task usedTask{
  group "dependencyTask"
  doLast{
  println "This is the used task"
  }
 }
task userTask(dependsOn: 'usedTask'){
  group "dependencyTask"
  doLast{
  println "This is user task"
  }
 }
 
 task zippin(type: Zip){
    group "zip"
    from "D:\\copytaskcopied"
    destinationDir = file("D:\\zippedTask")
    archiveName = "zipTask.zip"
 
 }
